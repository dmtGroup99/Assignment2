ggplot(data = mpg) + geom_point(mapping = aes(x = class, y = drv))
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy, shape = class))
mpg
View(mpg)
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy), shape = 8)
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy), shape = 22)
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy), shape = 22, color = "red")
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy), shape = 15)
head(mpg)
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy, color = "disply"))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy, size = "disply"))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy, shape = "disply"))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy, shape = class))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy, stroke = class))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy, stroke = cty))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy, stroke = cyl))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy, color = displ < 5))
ggplot(data = mpg) + geom_point(mapping = aes(x=displ, y= hwy, color = cyl < 5))
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y - hwy)) + facet_wrap(~ class , nrow = 2)
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(~ class , nrow = 2)
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(~ class , ncol = 2)
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ cyl)
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)) + facet_grid(drv ~ cyl)
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)) + facet_grid(. ~ cyl)
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)) + facet_grid(drv ~ .)
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_wrap(~ class , nrow = 2)
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(.~ class)
head(mpg)
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(.~ displ)
ggplot(data = mpg) + geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data  = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ cyl)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~.)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg) + geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, color = drv))
?geom_smooth
ggplot(data = mpg) + geom_smooth(mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy)) + geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point() + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = cyl)) + geom_point() + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = cyl)) + geom_point() + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color = drv)) + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point() + geom_smooth(mapping = aes(color = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color = class)) + geom_smooth(data = filter(mpg. class == "subcompact"), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color = class)) + geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color = class)) + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() + geom_smooth(se = FALSE, show.legend = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv), show.legend = FALSE) + geom_point() + geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(shape = 19) + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(size = 19) + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(size = 10) + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(size = 5) + geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(size = 5) + geom_smooth(mapping = aes(group = drv))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(size = 5) + geom_smooth(mapping = aes(group = drv), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point(size = 5) + geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color = drv)size = 5) + geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color = drv), size = 5) + geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color = drv), size = 5) + geom_smooth(mapping = aes(linetype = drv)se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point(mapping = aes(color = drv), size = 5) + geom_smooth(mapping = aes(linetype = drv), se = FALSE)
head(diamonds)
class(diamonda)
class(diamonds)
ggplot(data = diamonds) + geom_bar(mapping = aes(x=cut))
demo = tribble()
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
deom
demo
cos(pi/2)
sin(pi/2)
sin(0)
cos(0)
this_is_a_really_long_name <- 4.5
this_is_a_really_long_name <- 4.5
?seq
seq(1,10)
y <- seq(1,10)
(y<- seq(1,10))
library(nycflights13)
library('nycflights13')
nycflights13
install.packages('nycflights13')
library(nycflights13)
nycflights13::flights
flights
flights <- flights
colnames(flights)
View(flights)
summarise(flights)
?summarise
filter(flights, month==1, day==1)
head(mpg)
a <- filter(mpg, cyl<=4)
a
View(a)
a <- filter(mpg, class == "compact", drv == "f")
jan1 <- filter(flights, month == 1, day == 1)
head(jan1)
(dec25 <- filter(flights, month == 12, day == 25))
filter(flights, month = 1)
sqrt(2)^2
sqrt(2)^2 == 2
?near
near(sqrt(2)^2, 2)
filter(flights, month == 11, month == 12)
filter(flights, month == 11 | month == 12)
filter(flights, !(month == 11 | month == 12))
a <- filter(flights, month == 11 | month == 12)
nov_dec <- filter(flights, month %in% c(11,12))
View(nov_dec)
?is
x <- 3
is.na(x)
df <- tibble(x = c(1, NA, 3))
head(df)
df
filter(df,x>1)
filter(df, is.na(x) | x>1)
colnames(flights)
( a <- filter(flights, arr_delay >= 120 )
)
(a <- filter(flights, dest = "IAH" | dest = "HOU"))
(a <- filter(flights, dest == "IAH" | dest == "HOU"))
(a <- filter(flights, month == 7 | month == 8 | month == 9))
colnames(flights)
(a <- filter(flights, arr_time > 120 & sched_dep_time == dep_time))
View(a)
a <- flights
View(a)
2354-2251
?between
(a <- filter(flights, between(month, 4, 10)) )
View(a)
(a <- filter(flights, is.na(dep_time)) )
View(a)
NA^0
NA|TRUE
FALSE & NA
NA * 0
TRUE & NA
(a <- arrange(flights, year, month, day))
View(a)
(a <- arrange(flights, desc(arr_delay)))
(a <- arrange(flights, desc(arr_delay, sched_arr_time)))
(a <- arrange(flights, desc(sched_arr_time, arr_delay)))
df <- tibble(x = c(5, 2, NA))
df
arrange(df, x)
arrange(df, desc(x))
arrange(df, is.na(x))
arrange(df, desc(is.na(x)))
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
View(flights_sml)
library(tydiverse)
library(tidyverse)
library(nycflights13)
flights <- flights
View(flights)
flights20 <- select(flights, year:flight, gain = arr_de )
flights20 <- select(flights, year:flight, gain = arr_delay - dep_delay, speed = distance/air_time*60 )
colnumes(flights)
colnames(fligths)
colnames(flights)
flights20 <- select(flights, year:flight, gain = arr_delay - dep_delay, speed = distance / air_time * 60 )
flights20 <- mutate(gain = arr_delay - dep_delay, speed = distance / air_time * 60 )
flights20 <- mutate(flights, gain = arr_delay - dep_delay, speed = distance / air_time * 60 )
View(flights20)
head(flights20)
a <- transmute(flights, dep_hour = dep_time %/% 60)
head(a)
8*60
a <- transmute(flights, dep_hour = dep_time %/% 60, dep_minute = dep_time %% 60)
head(a)
b <- mutate(a, dep_time = dep_hour * 60 + dep_minute)
head(b)
?flights
x <- seq(1,10)
(x <- seq(1,10))
cumsum(x)
cumsum(x)
cumprod(x)
y <- c(1,2,2,NA,3,4)
min_rank(y)
?min_rank
transmute(flight, new = air_time - dep_time)
transmute(flights, new = air_time - dep_time)
1:3
1:3 + 1:10
summarise(flights, delya = mean(dep_delay, na.rm = TRUE))
summarise(flights)
by_dest <- group_by(flights, dest)
by_dest
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay <- filter(delay, count > 20, dest != "HNL")
delay
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay
?n()
flights %/% group_by(year, month, day) %/% summarise(mean = mean(dep_delay))
flights %>% group_by(year, month, day) %>% summarise(mean = mean(dep_delay))
flights %>% group_by(year, month, day) %>% summarise(mean = mean(dep_delay, na.rm = T))
not_cancelled <- flights %>% filter(!is.na(dep_delay), !is.na(arr_delay)) %>% summarise(mean = mean(dep_delay))
not_cancelled
not_cancelled <- flights %>% filter(!is.na(dep_delay), !is.na(arr_delay)) %>% group_by(year, month, day) %>% summarise(mean = mean(dep_delay))
not_cancelled
group_by(not_cancelled, tailnum)
not_cancelled %>% group_by(tailnum)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
delays <- not_cancelled %>%
group_by(tailnum) %>%
summarise(
delay = mean(arr_delay)
)
delays
not_cancelled
not_cancelled <- flights %>% filter(!is.na(dep_delay), !is.na(arr_delay)) %>% group_by(year, month, day) %>% summarise(mean = mean(dep_delay))
not_cancelled
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
not_cancelled %>% group_by(tailnum)
not_cancelled
not_cancelled %>%
group_by(year, month, day) %>%
summarise(hour_perc = mean(arr_delay > 60))
not_cancelled
?glimpse
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
source('~/visualisation.R')
ggplot(data = mpg) + geom_point(mapping = aes(x = displ , y = hwy ))
source('~/visualisation.R')
library(tidyverse)
dat  <-  gapminder
library(gapminder)
install.packages("gapminder")
library(gapminder)
dat <- gapminder
View(gapminder)
?gapminder
head(gapminder)
typeof(gapminder)
library(tidyverse)
?rnorm
df <- tibble(x = rnorm(100,3,5), y = rnorm(100,10,5))
df
df <-tibble( x = rnorm(100,3,5), y = rnorm(100,10,5))
(df <-tibble( x = rnorm(100,3,5), y = rnorm(100,10,5)))
colnum(df)
?col_number
col_number(df)
dim(df)
?seq
rep(1,10)
rep(1,10) + zeros(1,10)
rep(1,10) + rep(1,10)
library(tidyverse)
head(diamonds)
ggplot(data  = diamonds) + geom_boxplot(mapping = aes(x = cut, y = count()))
ggplot(data  = diamonds) + geom_boxplot(mapping = aes(x = cut, y = count)
)
ggplot(data  = diamonds) + geom_boxplot(mapping = aes(x = cut, y = carat))
diamond <- diamonds
mutate(diamond, countCut = count(cut))
diamonds %>% count(cut)
ggplot(data = diamond) + geom_histogram(mapping = aes(x = depth), binwidth = 0.5)
?wilcoxon.test
?wilcox.test()
diamond&depth
select(diamond, depth)
wilcox.test(select(diamond, depth))
typeof(select(diamond,depth))
x <- as.data.frame(select(diamond,depth))
typeof(x)
head(x)
wilcox.test(x)
class(as.data.frame(select(diamond, depth)))
x <- as.data.frame(select(diamond, depth))
head(x)
class(x)
typeof(x)
?shapiro.test()
shapiro.test(select(diamond, depth))
shapiro.test(as.data.frame(select(diamond,depth)))
shapiro.test(x)
is.numeric(x)
head(x)
class(x)
colnames(x)
?for
()
?for()
?map()
library(gapminder)
head(gapminder)
?round
?arrange
gapminder %>% arrange(gdpPercap)
gapminder %>% arrange(desc(gdpPercap))
gapminder %>% arrange(desc(gdpPercap), desc(pop))
gapminder %>% arrange(desc(pop))
?filter
gapminder %>% filter(country == "Netherlands")
gapminder %>% filter(country == "Netherlands") %>% arrange(year)
dutchData <- gapminder %>% filter(country == "Netherlands") %>% arrange(year)
dutchData
ggplot(data = dutchData) + geom_bar(mapping = aes(x = year, y = lifeExp))
ggplot(data = dutchData) + geom_histogram(mapping = aes(x = year, y = lifeExp))
ggplot(data = dutchData) + geom_plot(mapping = aes(x = year, y = lifeExp))
?ggplot2
ggplot(data = dutchData) + geom_line(mapping = aes(x = year, y = lifeExp))
NotFilterdutchData <- gapminder %>% filter(country == "Netherlands")
ggplot(data = NotFilterdutchData) + geom_line(mapping = aes(x = year, y = lifeExp))
Europe <- gapminder %>% filter(continent == "Europe")
ggplot(data = Europe) + geom_line(mapping = aes(x = year, y = lifeExp, colour = continent))
ggplot(data = Europe) + geom_line(mapping = aes(x = year, y = lifeExp, colour = country))
gapminder %>% filter(country == "Turkey")
gapminder %>% arrange(lifeExp)
gapminder %>% filter(year == 2007) %>% arrange(desc(lifeExp))
lifExp2007 <- gapminder %>% filter(year == 2007) %>% arrange(desc(lifeExp))
View(lifeExp2007)
View(lifExp2007)
lifExp2007 <- gapminder %>% filter(year == 2007) %>% arrange(desc(lifeExp)) %>% select(country, lifeExp)
?mutate
new <- gapminder %>% mutate(totalGdp = pop * gdpPercap)
new
new <- gapminder %>% mutate(totalGdp = pop * gdpPercap) %>% arrange(desc(totalGdp))
new
new <- gapminder %>% mutate(totalGdp = pop * gdpPercap) %>% filter(year == 2007) %>% arrange(desc(totalGdp))
new
new <- gapminder %>% mutate(totalGdp = pop * gdpPercap) %>% filter(year == 2007, continent == "Europe") %>% arrange(desc(totalGdp))
new
?signif
signif(1000,2)
signif(1000,2)/1000
library(modelr)
?bootstrap
mod <- lm(log(price) ~ log(carat), data = diamonds)
mod
summary(mod)
diamonds
diamonds %>%
mutate(lgprice = log(price), lgCarat = log(carat))
diamonds %>%
mutate(lgprice = log(price), lgCarat = log(carat)) %>%
select(lgprice, lgCarat)
diamonds %>%
mutate(lgprice = log(price), lgCarat = log(carat)) %>%
select(lgprice, lgCarat) %>%
ggplot() + geom_point(mapping = aes(x = lgprice, y = lgCarat))
tfData <- diamonds %>%
mutate(lgprice = log(price), lgCarat = log(carat)) %>%
select(lgprice, lgCarat)
tfData %>%
ggplot() + geom_point(mapping = aes(x = lgprice, y = lgCarat))
tfData
tfData %>%
lm(lgpric ~ lgCarat)
diamonds %>% lm(price ~ carat)
mod <- lm(lgprice ~ lgCarat, data = tfData)
diamonds %>% ggplot() + geom_point(mapping = aes(x = price, y = carat))
1/71
0.01408451*3600
3600/71
-1/(4*3600/71(1-40/(4*3600/71))) * log(0.99)
log(0.99)
-1/(4*3600/71(1-40/(4*3600/71)))
-1/(4*3600/71*(1-40/(4*3600/71))) * log(0.99)
1-6.172784e-05
?pnorm
qnorm(5/9,20,1)
qnorm(5/9,20,2)
qnorm(4/9,20,1)
qnorm(4/9,20,2)
?rpois
ppois(0.975,lambda = 200)
qpois(0.975,lambda = 200)
qpois(0.025,lambda = 200)
?qnorm
qnorm(5/9-20)
qnorm(5/9)
qnorm(5/9) + 20
qnorm(5/9)*sqrt(2) + 20
load("lda_user.rda")
?dist
jaccard.index(1:10, 2:20)
library(text2vec)
sim2(1:10,2:20, method = "cosine")
B = matrix(
c(2, 4, 3, 1, 5, 7),
nrow=3,
ncol=2)
C <- t(B)
sim2(B,C, method = "cosine")
x<-rnorm(10)
x<-matrix(x)
y<-matrix(rnorm(10*5),nrow=5)
x
y
install.packages("shiny")
install.packages("Shines")
install.packages("shinyjs")
install.packages("DT")
library(data.table)
data <- data.table::fread(input = "../dataset_mood_smartphone.csv",drop = 1)
ndcg <- function(label, id, predictions, k){
d <- data.frame(relevance = label, id=id, order = predictions, one=1)
d <- d[order(d$id, -d$relevance),]
d$co<-with(d, unlist(tapply(one, id, cumsum)))
d$v<-with(d, (2^relevance-1)/(log(co+1, 2)))
dcg0<-with(d[d$co<=k,], unlist(tapply(v, id, sum)))
d<-d[order(d$id, -d$order),]
d$co<-with(d, unlist(tapply(one, id, cumsum)))
d$v<-with(d, (2^relevance-1)/(log(co+1, 2)))
dcg<-with(d[d$co<=k,], unlist(tapply(v, id, sum)))
return(mean(dcg/dcg0))
}
predictions <- c(0.9, 0.7, 0.6,0.8,0.4,0,0.5,0 )
id <- c(1:8)
ndcg(label, id, predictions, 6)
label <- c(3,3,3,2,2,2,1,0)
ndcg(label, id, predictions, 6)
k=6
d <- data.frame(relevance = label, id=id, order = predictions, one=1)
d
id <- c(1,1,1,1,1,1,1,1)
d <- data.frame(relevance = label, id=id, order = predictions, one=1)
d
d <- d[order(d$id, -d$relevance),]
d
d$co<-with(d, unlist(tapply(one, id, cumsum)))
d$v<-with(d, (2^relevance-1)/(log(co+1, 2)))
dcg0<-with(d[d$co<=k,], unlist(tapply(v, id, sum)))
dcg0
d<-d[order(d$id, -d$order),]
d$co<-with(d, unlist(tapply(one, id, cumsum)))
d$v<-with(d, (2^relevance-1)/(log(co+1, 2)))
dcg<-with(d[d$co<=k,], unlist(tapply(v, id, sum)))
dcg
mean(dcg/dcg0)
d
d <- data.frame(relevance = label, id=id, order = predictions, one=1)
d
d <- d[order(d$id, -d$relevance),]
d$co<-with(d, unlist(tapply(one, id, cumsum)))
d
d$v<-with(d, (2^relevance-1)/(log(co+1, 2)))
d
2^(3)-1
log(2,2)
2^(3)-1
log(3,2)
7/log(3,2)
dcg0<-with(d[d$co<=k,], unlist(tapply(v, id, sum)))
d<-d[order(d$id, -d$order),]
d$co<-with(d, unlist(tapply(one, id, cumsum)))
d$v<-with(d, (2^relevance-1)/(log(co+1, 2)))
d
predictions <- c(0.9, 0, 0.6,0.8,0.3,0,0.4,0.5 )
d <- data.frame(relevance = label, id=id, order = predictions, one=1)
d <- d[order(d$id, -d$relevance),]
d$co<-with(d, unlist(tapply(one, id, cumsum)))
d$v<-with(d, (2^relevance-1)/(log(co+1, 2)))
dcg0<-with(d[d$co<=k,], unlist(tapply(v, id, sum)))
d<-d[order(d$id, -d$order),]
d$co<-with(d, unlist(tapply(one, id, cumsum)))
d$v<-with(d, (2^relevance-1)/(log(co+1, 2)))
d
dcg<-with(d[d$co<=k,], unlist(tapply(v, id, sum)))
mean(dcg/dcg0)
setwd("~/Desktop/Assignment2")
library(data.table)
data <- data.table::fread(input = "../training_set_VU_DM_2014.csv", na.strings = c("NA", "NULL", "null"), data.table = FALSE)
train_instances <- 0.8
